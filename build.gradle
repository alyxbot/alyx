/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5.1/userguide/tutorial_java_projects.html
 */


plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.github.spotbugs' version '1.7.1'
    id 'jacoco'
}

group 'gg.sep'
version '1.0-SNAPSHOT'

sourceCompatibility = 11.0

// variable definitions
project.ext {
    lombokVersion = '1.18.+'
    checkstyleVersion = '8.22'
    spotbugsVersion = '3.1.12'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    // alyx core dependencies
    implementation 'net.dv8tion:JDA:3.+'

    // External Utilities and Libraries
    implementation 'com.google.guava:guava:27.1-jre'
    implementation 'org.apache.commons:commons-collections4:4.+'
    implementation 'org.apache.commons:commons-lang3:3.+'
    compile 'org.apache.logging.log4j:log4j-api:2.11.+'
    compile 'org.apache.logging.log4j:log4j-core:2.11.+'

    // build dependencies
    compileOnly "org.projectlombok:lombok:$project.ext.lombokVersion"
    compileOnly "com.github.spotbugs:spotbugs-annotations:$project.ext.spotbugsVersion"


    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

sourceSets {
    main {
        resources {
            srcDirs 'src/main/resources'
        }
    }
}

checkstyle {
    ignoreFailures = false
    configFile file('config/checkstyle/checkstyle.xml')
    configDir file('config/checkstyle')
    toolVersion project.ext.checkstyleVersion
}

spotbugs {
    ignoreFailures = false
    toolVersion project.ext.spotbugsVersion
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}

jacocoTestReport {
    reports {
        html.enabled true
        html.destination file("${buildDir}/reports/jacoco/html")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.0 // TODO
            }
        }
    }
}
jacocoTestReport.dependsOn test
check.dependsOn jacocoTestCoverageVerification

// unchecked and deprecation should produce warnings
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

application {
    // Define the main class for the application
    mainClassName = 'alyx.App'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
